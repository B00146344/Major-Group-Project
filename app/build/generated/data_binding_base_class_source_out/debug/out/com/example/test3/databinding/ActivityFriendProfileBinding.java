// Generated by view binder compiler. Do not edit!
package com.example.test3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFriendProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button chatButton;

  @NonNull
  public final TextView friendName;

  @NonNull
  public final ImageView friendProfilePicture;

  @NonNull
  public final TextView friendStats;

  @NonNull
  public final Button sendFriendRequestButton;

  @NonNull
  public final Button unfriendButton;

  @NonNull
  public final Button viewStatsButton;

  private ActivityFriendProfileBinding(@NonNull ScrollView rootView, @NonNull Button chatButton,
      @NonNull TextView friendName, @NonNull ImageView friendProfilePicture,
      @NonNull TextView friendStats, @NonNull Button sendFriendRequestButton,
      @NonNull Button unfriendButton, @NonNull Button viewStatsButton) {
    this.rootView = rootView;
    this.chatButton = chatButton;
    this.friendName = friendName;
    this.friendProfilePicture = friendProfilePicture;
    this.friendStats = friendStats;
    this.sendFriendRequestButton = sendFriendRequestButton;
    this.unfriendButton = unfriendButton;
    this.viewStatsButton = viewStatsButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFriendProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFriendProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_friend_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFriendProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chatButton;
      Button chatButton = ViewBindings.findChildViewById(rootView, id);
      if (chatButton == null) {
        break missingId;
      }

      id = R.id.friendName;
      TextView friendName = ViewBindings.findChildViewById(rootView, id);
      if (friendName == null) {
        break missingId;
      }

      id = R.id.friendProfilePicture;
      ImageView friendProfilePicture = ViewBindings.findChildViewById(rootView, id);
      if (friendProfilePicture == null) {
        break missingId;
      }

      id = R.id.friendStats;
      TextView friendStats = ViewBindings.findChildViewById(rootView, id);
      if (friendStats == null) {
        break missingId;
      }

      id = R.id.sendFriendRequestButton;
      Button sendFriendRequestButton = ViewBindings.findChildViewById(rootView, id);
      if (sendFriendRequestButton == null) {
        break missingId;
      }

      id = R.id.unfriendButton;
      Button unfriendButton = ViewBindings.findChildViewById(rootView, id);
      if (unfriendButton == null) {
        break missingId;
      }

      id = R.id.viewStatsButton;
      Button viewStatsButton = ViewBindings.findChildViewById(rootView, id);
      if (viewStatsButton == null) {
        break missingId;
      }

      return new ActivityFriendProfileBinding((ScrollView) rootView, chatButton, friendName,
          friendProfilePicture, friendStats, sendFriendRequestButton, unfriendButton,
          viewStatsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
